# Generated by Django 3.2.6 on 2022-05-23 14:27

import aeroflot.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import storages.backends.s3boto3


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('airac', '0001_initial'),
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Aeroflot', max_length=10)),
                ('callsign', models.CharField(blank=True, max_length=100, null=True)),
                ('icao', models.CharField(default='AFL', max_length=10)),
                ('iata', models.CharField(default='SU', max_length=10)),
                ('hub', models.CharField(default='UUEE', max_length=10)),
                ('logo', models.ImageField(storage=storages.backends.s3boto3.S3Boto3Storage(), upload_to=aeroflot.models.get_file_path_company)),
                ('hours', models.IntegerField(default=0, editable=0)),
                ('flights', models.IntegerField(default=0, editable=0)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('text_ru', models.TextField()),
                ('text_en', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='RecalcModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': '7. Recalculate All Flights and Hours',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flightnum', models.CharField(help_text='Example: SU123', max_length=100, unique=True, verbose_name='Flight Number')),
                ('callsign', models.CharField(help_text='Example: AFL123', max_length=100, verbose_name='Callsign')),
                ('route', models.CharField(help_text='Example: TOKNU L4 NUDKO T561 ODATI T875 GENPA', max_length=4000, verbose_name='Route')),
                ('flight_level', models.IntegerField(help_text='Example: 370', verbose_name='Flight Level')),
                ('distance', models.IntegerField(blank=True, help_text="Example: 350 in NM. It'll be calculated automatically if it'll be clear.", null=True, verbose_name='Distance')),
                ('deptime', models.TimeField(blank=True, help_text='Example: 11:00', null=True, verbose_name='Departure Time')),
                ('arrtime', models.TimeField(blank=True, help_text='Example: 12:00', null=True, verbose_name='Arrival Time')),
                ('flights', models.IntegerField(default=0, editable=False)),
                ('hours', models.FloatField(default=0, editable=False)),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active')], default='Inactive', max_length=100)),
                ('flight_type', models.CharField(choices=[('Regular', 'Regular'), ('Fly-In', 'Fly-In'), ('Charter', 'Charter')], default='Regular', max_length=100)),
                ('payload_percentage', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('aircraft_type', models.ManyToManyField(to='main.AircraftICAO')),
                ('alternate_icao', models.ForeignKey(help_text='Example: UUEE', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alternate_icao', to='airac.airport', verbose_name='Alternative Airport')),
                ('arr_icao', models.ForeignKey(help_text='Example: UUEE', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='arr_icao', to='airac.airport', verbose_name='Arrival Airport')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='aeroflot.company')),
                ('dep_icao', models.ForeignKey(help_text='Example: UUEE', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dep_icao', to='airac.airport', verbose_name='Departure Airport')),
            ],
            options={
                'verbose_name_plural': 'Schedule',
            },
        ),
        migrations.CreateModel(
            name='Pilot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callsign', models.CharField(default='AFL', max_length=10)),
                ('status', models.CharField(choices=[('Just Registred', 'Just Registred'), ('Inactive', 'Inactive'), ('Active', 'Active')], default='Just Registred', max_length=100)),
                ('additional_flights', models.IntegerField(default=0)),
                ('additional_hours', models.IntegerField(default=0, help_text='IN SECONDS!!! CONVERT HOURS TO SECONDS!!! For Example 2 hours = 7200 seconds')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Pilot')),
            ],
            options={
                'verbose_name_plural': 'Pilots',
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flightnum', models.CharField(blank=True, help_text='Example: SU123', max_length=100, null=True, verbose_name='Flight Number')),
                ('callsign', models.CharField(blank=True, help_text='Example: AFL123', max_length=100, null=True, verbose_name='Callsign')),
                ('aircraft_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Aircraft Type')),
                ('aircraft_registration', models.CharField(blank=True, max_length=10, null=True, verbose_name='Aircraft Registration')),
                ('dep_time', models.DateTimeField(blank=True, help_text='Example: 11:00', null=True, verbose_name='Departure Time')),
                ('arr_time', models.DateTimeField(blank=True, help_text='Example: 11:00', null=True, verbose_name='Arrival Time')),
                ('flight_time', models.IntegerField(blank=True, null=True)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('route', models.CharField(help_text='Example: TOKNU L4 NUDKO T561 ODATI T875 GENPA', max_length=4000, null=True, verbose_name='Route')),
                ('pax', models.IntegerField(null=True)),
                ('cargo', models.IntegerField(null=True)),
                ('landing_vs', models.IntegerField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, default=100, null=True)),
                ('fuel_used', models.IntegerField(blank=True, default=0, null=True)),
                ('fuel_left', models.IntegerField(blank=True, default=0, null=True)),
                ('zfw', models.IntegerField(blank=True, default=0, null=True)),
                ('to_weight', models.IntegerField(blank=True, default=0, null=True)),
                ('landing_weight', models.IntegerField(blank=True, default=0, null=True)),
                ('fsuipc_data', models.JSONField(null=True)),
                ('arrival_airport', models.ForeignKey(blank=True, help_text='Example: UUEE', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='arrival_airport', to='airac.airport', verbose_name='Arrival Airport')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='aeroflot.company')),
                ('departure_airport', models.ForeignKey(blank=True, help_text='Example: UUEE', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='departure_airport', to='airac.airport', verbose_name='Departure Airport')),
                ('penalty', models.ManyToManyField(blank=True, to='main.Penalty')),
                ('pilot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flight', to='aeroflot.pilot')),
                ('sim_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.simversion')),
            ],
            options={
                'verbose_name_plural': 'Flights',
            },
        ),
        migrations.CreateModel(
            name='Fleet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aircraft_registration', models.CharField(max_length=10, unique=True, verbose_name='Aircraft Registration')),
                ('aircraft_image', models.ImageField(storage=storages.backends.s3boto3.S3Boto3Storage(), upload_to=aeroflot.models.get_file_path_fleet)),
                ('status', models.CharField(choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Stored', 'Stored'), ('Retro', 'Retro')], default='Inactive', max_length=100)),
                ('aircraft_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fleet', to='main.aircrafttype')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fleet', to='aeroflot.company')),
                ('now', models.ForeignKey(help_text='Example: UUEE', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fleet', to='airac.airport')),
            ],
            options={
                'verbose_name_plural': 'Fleet',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callsign', models.CharField(editable=False, max_length=100, unique=True)),
                ('route', models.CharField(help_text='Example: TOKNU L4 NUDKO T561 ODATI T875 GENPA', max_length=4000, verbose_name='Route')),
                ('flight_level', models.IntegerField(help_text='Example: 370', verbose_name='Flight Level')),
                ('distance', models.IntegerField(blank=True, help_text="Example: 350 in NM. It'll be calculated automatically if it'll be clear.", null=True, verbose_name='Distance')),
                ('deptime', models.TimeField(blank=True, help_text='Example: 11:00', null=True, verbose_name='Departure Time')),
                ('flight_time', models.TimeField()),
                ('flight_type', models.CharField(blank=True, editable=False, max_length=100)),
                ('pax', models.IntegerField(blank=True, null=True)),
                ('cargo', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('altitude', models.IntegerField(null=True)),
                ('speed', models.IntegerField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('latitude', models.FloatField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('aircraft', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='book', to='aeroflot.fleet')),
                ('alternate_airport', models.ForeignKey(editable=False, help_text='Example: UUEE', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alternate_icao_booking', to='airac.airport', verbose_name='Alternative Airport')),
                ('arr_airport', models.ForeignKey(editable=False, help_text='Example: UUEE', on_delete=django.db.models.deletion.PROTECT, related_name='arr_airport', to='airac.airport', verbose_name='Arrival Airport')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='book', to='aeroflot.company')),
                ('dep_airport', models.ForeignKey(editable=False, help_text='Example: UUEE', on_delete=django.db.models.deletion.PROTECT, related_name='dep_airport', to='airac.airport', verbose_name='Departure Airport')),
                ('pilot', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='book', to='aeroflot.pilot')),
                ('schedule', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='book', to='aeroflot.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='AircraftImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aircraft_image', models.ImageField(storage=storages.backends.s3boto3.S3Boto3Storage(), upload_to=aeroflot.models.get_file_path_ai)),
                ('aircraft_icao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aircraft_image', to='main.aircrafticao')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='aeroflot.company')),
            ],
            options={
                'verbose_name': 'Aircraft Type Image',
                'unique_together': {('aircraft_icao', 'company')},
            },
        ),
    ]
